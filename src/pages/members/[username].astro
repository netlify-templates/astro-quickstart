---
import Layout from '../../layouts/Layout.astro'

import Modal from '../../components/modal.astro'
import LargeImage from '../../components/largeImage.astro'

import '../../styles/pages/members.scss'
import '../../styles/photos.scss'

import updateMember from '../../../members/updateMember.js'

function getFName(str) {
  if (str.includes('/')) str = str.split('/').slice(-1)[0]
  return str
}

function getFNameNoExt(str) {
  if (str.includes('/')) str = str.split('/').slice(-1)[0]
  str = str.slice(0, -1*getFExt(str, 2).length)

  return str
}

function getFExt(str, level=1) {
  str = getFName(str)
  if (str.includes('.') && level > 0) {
    switch (level) {
      case 1: 
        str = str.split('.').slice(-1, -1).join('.')
        break
      default: 
        str = str.split('.').slice(-1*level, -1).join('.')
        break
    }
  }
  return str
}

function toProper(user) {
  user = `${user.slice(0, 1).toUpperCase()}${user.slice(1)}`
  return user
}

var pImgs = await Astro.glob('../../../members/*/portfolio/*')
var portfolioImgs = []
var fResS = []

pImgs.map(img => {
  img = img.default
  if (typeof img === 'object') {
    var obj = img

    var name = getFNameNoExt(img.src)

    var fullRes = fResS.filter(r => getFNameNoExt(r) === getFNameNoExt(img.src))
    if (fullRes.length > 0) {
      obj.fullRes = fullRes[0]
    }

    portfolioImgs.push(obj)
  }
  else fResS.push(img)
})

export function getStaticPaths() {
  return [
    {params: {username: 'adarsh'}}, 
    {params: {username: 'amelia'}}, 
    {params: {username: 'arianna'}}, 
    {params: {username: 'beatriz'}}, 
    {params: {username: 'bridget'}}, 
    {params: {username: 'cedrus'}}, 
    {params: {username: 'hanlin'}}, 
    {params: {username: 'isabelle'}}, 
    {params: {username: 'jeremy'}}, 
    {params: {username: 'lorelai'}}, 
    {params: {username: 'luce'}}, 
    {params: {username: 'mia'}}, 
    {params: {username: 'maya'}}, 
    {params: {username: 'miriam'}}, 
    {params: {username: 'parker'}}, 
    {params: {username: 'robin'}}, 
    {params: {username: 'sayuri'}}, 
    {params: {username: 'shikha'}}, 
    {params: {username: 'tyler'}}, 
    {params: {username: 'zach'}}, 

    {params: {username: '_default'}},
    {params: {username: 'juhi'}}, 
    {params: {username: 'rien'}}, 
    {params: {username: 'sam'}}, 
    {params: {username: 'samantha'}}, 
  ];
}

const { username } = Astro.params;
if (!username) username = '_admin'

import MemberPageTemplate from '../../components/memberPageTemplate.astro'

var defaultData = await Astro.glob('../../../members/_admin/info.js')
var userDatas = await Astro.glob('../../../members/*/info.js')

var userData = userDatas.find(data => data.default.username === username)

if (!userData) return Astro.redirect('/members/')

if (!userData) console.log(`\n${username}`)
if (userData.default) userData = userData.default
else userData = {}
if (!userData.portfolio) userData.portfolio = []
userData = updateMember(userData)

if (userData.status) {
  if (userData.status === 'activeGrad') userData.status = 'active'
}
else userData.status = 'inactive'

---
<Layout title={userData.name}>
  <main id="content" class="profile">
    {
      userData.status ? 
        <section>
          {
            (userData.status === 'active' && userData.pfp) ? <img class="pfp" id="pfp" src={userData.pfp.url} /> : ''
          }
          <h1 class="name" id="name">{userData.name}</h1>
          {
            (userData.status === 'active' && userData.email) ? <a class="email" id="email" href={`mailto:${userData.email.address}`}>{userData.email.address}</a> : ''
          }
          {
            (userData.status === 'active' && userData.location) ? 
              <a class="location" id="location" href={userData.location.mapLink}>        
                <div></div>
                <span>{userData.location.combined}</span>
              </a>
            : ''
          }
          {
            (userData.status === 'active' && userData.socials.length < 0) ? 
              <ul class="socials">
                  {
                    userData.socials.map((social) => (
                      <li>
                        <a href={social.url} target="_blank" style={`background-image: url('${social.icon}')`}></a>
                      </li>
                    ))
                  }
              </ul>
            : ''
          }
          <p class="bio" id="bio" set:html={userData.bio.result}></p>
          {
            (userData.status === 'active' && userData.portfolio.length > 0) ? 
              <h2>Portfolio</h2>
              <ul class="photos" style="height: auto; gap: 25px;">
                {
                  userData.portfolio.map(photo => {
                    var file = photo.file
                    console.log('\n')
                    var img = portfolioImgs.filter(i => {console.log(i); return false})
                    return <pre>{JSON.stringify(photo, null, 4)}</pre>
                    // <li>
                    //   <LargeImage src={photo.file} alt={photo.title || ''} onclick={photo.onclick || ''} />
                    // </li>
                  })
                }
              </ul>
            : ''
          }
        </section>
      : <section><pre>{userData}</pre></section>
    }
  </main>
  <Modal />
</Layout>